<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MenthaAssembly.Views">

    <Style x:Key="{x:Type local:DataGridComboBoxColumn}" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style x:Key="DataGridColumnComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="True">
                                            <Border x:Name="splitBorder"
                                                    BorderBrush="Transparent" BorderThickness="1"
                                                    HorizontalAlignment="Right"
                                                    SnapsToDevicePixels="True"
                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                <Path x:Name="arrow"
													  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
													  Fill="#FF606060"
													  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="arrow" Property="Fill" Value="#FF000000"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}, Mode=FindAncestor}}" Value="True">
                                                <Setter Property="Fill" TargetName="arrow" Value="{x:Static SystemColors.HighlightTextBrush}"/>
                                            </DataTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
							   Margin="1"
							   AllowsTransparency="True" Focusable="False" Placement="Bottom"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							   Grid.ColumnSpan="2">
                            <local:ShadowPresenter MinWidth="{TemplateBinding ActualWidth}"
                                                   SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        BorderThickness="1">
                                    <ScrollViewer>
                                        <ItemsPresenter RenderOptions.ClearTypeHint="Enabled"
                                                        TextElement.Foreground="{x:Static SystemColors.ControlTextBrush}"
												        KeyboardNavigation.DirectionalNavigation="Contained"
												        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </local:ShadowPresenter>
                        </Popup>
                        <ToggleButton x:Name="ToggleButton"
									  Background="{TemplateBinding Background}"
									  Foreground="{TemplateBinding Foreground}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
									  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  Style="{DynamicResource DataGridColumnComboBoxToggleButton}"
									  Grid.ColumnSpan="2"/>
                        <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
									      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
									      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
									      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									      IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
									      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="{x:Static SystemColors.HighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ToggleButton" Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource BottomValidationErrorTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>